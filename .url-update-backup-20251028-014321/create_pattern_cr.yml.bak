---
# Create Pattern Custom Resource for Validated Patterns Operator

- name: Load values-global.yaml configuration
  include_vars:
    file: "{{ validated_patterns_values_global }}"
    name: values_global
  when: validated_patterns_values_global is defined

- name: Load values-hub.yaml configuration
  include_vars:
    file: "{{ validated_patterns_values_hub }}"
    name: values_hub
  when: validated_patterns_values_hub is defined

- name: Display pattern configuration
  debug:
    msg: |
      Creating Pattern CR:
      Name: {{ validated_patterns_pattern_name }}
      Git URL: {{ validated_patterns_git_url }}
      Revision: {{ validated_patterns_git_revision }}
      Target Namespace: {{ validated_patterns_target_namespace }}
  when: vp_debug_mode | bool

- name: Check if Pattern CR already exists
  kubernetes.core.k8s_info:
    api_version: gitops.hybrid-cloud-patterns.io/v1alpha1
    kind: Pattern
    name: "{{ validated_patterns_pattern_name }}"
    namespace: "{{ vp_operator_namespace }}"
  register: existing_pattern_cr
  ignore_errors: yes

- name: Create Pattern Custom Resource
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: gitops.hybrid-cloud-patterns.io/v1alpha1
      kind: Pattern
      metadata:
        name: "{{ validated_patterns_pattern_name }}"
        namespace: "{{ vp_operator_namespace }}"
      spec:
        clusterGroupName: "{{ validated_patterns_cluster_group_name | default('hub') }}"
        gitSpec:
          targetRepo: "{{ validated_patterns_git_url }}"
          targetRevision: "{{ validated_patterns_git_revision }}"
        multiSourceConfig:
          enabled: true
          clusterGroupChartGitRevision: "{{ validated_patterns_git_revision }}"
          clusterGroupChartVersion: "0.8.0"
        gitOpsSpec:
          operatorChannel: "{{ vp_operator_channel }}"
          operatorSource: "{{ vp_operator_source }}"
        extraParameters: "{{ validated_patterns_extra_parameters | default([]) }}"
  register: pattern_cr_result
  when: existing_pattern_cr.resources | length == 0

- name: Display Pattern CR creation status
  debug:
    msg: |
      {% if existing_pattern_cr.resources | length > 0 %}
      ℹ️  Pattern CR already exists
      {% else %}
      ✅ Pattern CR created successfully
      {% endif %}
      Name: {{ validated_patterns_pattern_name }}
      Namespace: {{ vp_operator_namespace }}

- name: Wait for Pattern CR to be processed
  kubernetes.core.k8s_info:
    api_version: gitops.hybrid-cloud-patterns.io/v1alpha1
    kind: Pattern
    name: "{{ validated_patterns_pattern_name }}"
    namespace: "{{ vp_operator_namespace }}"
  register: pattern_status
  until:
    - pattern_status.resources | length > 0
    - pattern_status.resources[0].status is defined
  retries: 30
  delay: 10
  ignore_errors: yes

- name: Display Pattern CR status
  debug:
    msg: |
      Pattern CR Status:
      Name: {{ validated_patterns_pattern_name }}
      Cluster: {{ pattern_status.resources[0].status.clusterName | default('Unknown') }}
      Last Step: {{ pattern_status.resources[0].status.lastStep | default('Initializing') }}
      Applications: {{ pattern_status.resources[0].status.applications | default([]) | length }}
  when:
    - pattern_status.resources | length > 0
    - vp_debug_mode | bool

- name: Wait for Pattern CR applications to be deployed
  kubernetes.core.k8s_info:
    api_version: gitops.hybrid-cloud-patterns.io/v1alpha1
    kind: Pattern
    name: "{{ validated_patterns_pattern_name }}"
    namespace: "{{ vp_operator_namespace }}"
  register: pattern_deployed
  until:
    - pattern_deployed.resources | length > 0
    - pattern_deployed.resources[0].status is defined
    - pattern_deployed.resources[0].status.applications is defined
    - pattern_deployed.resources[0].status.applications | length > 0
    - pattern_deployed.resources[0].status.applications | selectattr('syncStatus', 'equalto', 'Synced') | list | length > 0
  retries: "{{ vp_pattern_deploy_timeout // 10 }}"
  delay: 10
  ignore_errors: yes

- name: Display final Pattern CR status
  debug:
    msg: |
      ✅ Pattern CR deployed successfully
      Name: {{ validated_patterns_pattern_name }}
      Cluster: {{ pattern_deployed.resources[0].status.clusterName | default('Unknown') }}
      Platform: {{ pattern_deployed.resources[0].status.clusterPlatform | default('Unknown') }}
      Version: {{ pattern_deployed.resources[0].status.clusterVersion | default('Unknown') }}
      Last Step: {{ pattern_deployed.resources[0].status.lastStep | default('Unknown') }}

      Applications Deployed:
      {% for app in pattern_deployed.resources[0].status.applications | default([]) %}
      - {{ app.name }}: {{ app.syncStatus | default('Unknown') }} / {{ app.healthStatus | default('Unknown') }}
      {% endfor %}

      The Validated Patterns Operator has deployed:
      1. OpenShift GitOps (ArgoCD) ✅
      2. Clustergroup Application ✅
      3. Pattern Components ✅
