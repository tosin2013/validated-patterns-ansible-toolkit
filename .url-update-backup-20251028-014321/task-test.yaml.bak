apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: reference-app-test
  namespace: reference-app
spec:
  description: Run tests for Quarkus reference application

  params:
  - name: MAVEN_IMAGE
    type: string
    description: Maven container image
    default: maven:3.8-openjdk-17
  - name: TEST_GOALS
    type: array
    description: Maven test goals
    default:
    - test
  - name: MAVEN_MIRROR_URL
    type: string
    description: Maven mirror URL
    default: ""

  workspaces:
  - name: source
    description: Source code workspace

  steps:
  - name: run-tests
    image: $(params.MAVEN_IMAGE)
    workingDir: $(workspaces.source.path)
    env:
    - name: MAVEN_OPTS
      value: "-Xmx512m"
    - name: MAVEN_MIRROR_URL
      value: $(params.MAVEN_MIRROR_URL)
    command:
    - /bin/bash
    - -c
    args:
    - |
      set -e

      echo "Running tests for Quarkus reference application..."

      # Configure Maven mirror if provided
      if [ -n "$MAVEN_MIRROR_URL" ]; then
        echo "Using Maven mirror: $MAVEN_MIRROR_URL"
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml <<EOF
      <settings>
        <mirrors>
          <mirror>
            <id>central</id>
            <name>Central Repository</name>
            <url>$MAVEN_MIRROR_URL</url>
            <mirrorOf>central</mirrorOf>
          </mirror>
        </mirrors>
      </settings>
      EOF
      fi

      # Run tests
      mvn $(echo "$(params.TEST_GOALS)" | tr ',' ' ')

      echo "Tests completed successfully!"

  - name: verify-tests
    image: $(params.MAVEN_IMAGE)
    workingDir: $(workspaces.source.path)
    command:
    - /bin/bash
    - -c
    args:
    - |
      set -e

      echo "Verifying test results..."

      # Check test reports
      if [ -d target/surefire-reports ]; then
        echo "Test reports found:"
        ls -la target/surefire-reports/

        # Count test results
        TESTS=$(find target/surefire-reports -name "*.xml" | wc -l)
        echo "Total test files: $TESTS"
      else
        echo "WARNING: No test reports found"
      fi

      # Check for test failures
      if grep -r "failures=\"[1-9]" target/surefire-reports/ 2>/dev/null; then
        echo "ERROR: Test failures detected!"
        exit 1
      fi

      echo "Test verification passed!"

  - name: generate-coverage
    image: $(params.MAVEN_IMAGE)
    workingDir: $(workspaces.source.path)
    command:
    - /bin/bash
    - -c
    args:
    - |
      set -e

      echo "Generating test coverage report..."

      # Generate coverage report (optional)
      if mvn jacoco:report 2>/dev/null; then
        echo "Coverage report generated:"
        ls -la target/site/jacoco/
      else
        echo "Coverage report generation skipped (jacoco not configured)"
      fi
