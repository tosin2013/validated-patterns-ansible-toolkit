---
# Example: Deploy Pattern with Gitea
# This playbook demonstrates deploying a pattern with Gitea for local Git hosting

- name: Deploy Validated Pattern with Gitea
  hosts: localhost
  connection: local
  gather_facts: false
  
  vars:
    # Pattern Configuration
    pattern_name: "multicloud-gitops"
    pattern_repo: "https://github.com/validatedpatterns/multicloud-gitops.git"
    pattern_branch: "main"
    
    # Use Gitea for local Git hosting
    use_gitea: true
    gitea_namespace: "gitea"
    gitea_admin_user: "gitea-admin"
    gitea_admin_password: "{{ lookup('env', 'GITEA_ADMIN_PASSWORD') | default('changeme', true) }}"
    gitea_create_repos: true
    
    # Gitea repository configuration
    gitea_repos:
      - name: "multicloud-gitops"
        description: "Multicloud GitOps Pattern"
        private: false
        auto_init: false
    
    # ArgoCD Configuration
    argocd_namespace: "openshift-gitops"
    sync_policy: "automated"
    self_heal: true
    
    # Secrets Configuration
    sealed_secrets_namespace: "sealed-secrets"
  
  tasks:
    - name: Validate prerequisites
      ansible.builtin.include_role:
        name: tosin2013.validated_patterns_toolkit.prerequisites
      tags:
        - prerequisites
    
    - name: Setup common resources
      ansible.builtin.include_role:
        name: tosin2013.validated_patterns_toolkit.common
      tags:
        - common
    
    - name: Deploy and configure Gitea
      ansible.builtin.include_role:
        name: tosin2013.validated_patterns_toolkit.gitea
      tags:
        - gitea
    
    - name: Wait for Gitea to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ gitea_namespace }}"
        label_selectors:
          - app=gitea
      register: gitea_pods
      until: gitea_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0
      retries: 30
      delay: 10
      tags:
        - gitea
    
    - name: Display Gitea information
      ansible.builtin.debug:
        msg:
          - "Gitea deployed successfully!"
          - "Gitea URL: https://gitea-{{ gitea_namespace }}.apps.{{ cluster_domain | default('example.com') }}"
          - "Admin User: {{ gitea_admin_user }}"
          - "Repositories created: {{ gitea_repos | map(attribute='name') | list | join(', ') }}"
      tags:
        - gitea
    
    - name: Install Validated Patterns Operator
      ansible.builtin.include_role:
        name: tosin2013.validated_patterns_toolkit.operator
      tags:
        - operator
    
    - name: Setup secrets management
      ansible.builtin.include_role:
        name: tosin2013.validated_patterns_toolkit.secrets
      tags:
        - secrets
    
    - name: Deploy the pattern
      ansible.builtin.include_role:
        name: tosin2013.validated_patterns_toolkit.deploy
      vars:
        # Override pattern_repo to use Gitea
        pattern_repo: "https://gitea-{{ gitea_namespace }}.apps.{{ cluster_domain | default('example.com') }}/{{ gitea_admin_user }}/multicloud-gitops.git"
      tags:
        - deploy
    
    - name: Validate deployment
      ansible.builtin.include_role:
        name: tosin2013.validated_patterns_toolkit.validate
      tags:
        - validate
    
    - name: Display deployment summary
      ansible.builtin.debug:
        msg:
          - "========================================="
          - "Pattern Deployment with Gitea Complete!"
          - "========================================="
          - "Pattern Name: {{ pattern_name }}"
          - "Gitea URL: https://gitea-{{ gitea_namespace }}.apps.{{ cluster_domain | default('example.com') }}"
          - "Gitea Admin: {{ gitea_admin_user }}"
          - "Pattern Repository: {{ pattern_repo }}"
          - "Deployment Status: {{ deployment_status.success | default(false) | ternary('SUCCESS', 'FAILED') }}"
          - "========================================="
      tags:
        - always

# Usage:
# export GITEA_ADMIN_PASSWORD="your-secure-password"
# ansible-playbook example_with_gitea.yml
#
# Or with inline password (not recommended for production):
# ansible-playbook example_with_gitea.yml -e "gitea_admin_password=changeme"

