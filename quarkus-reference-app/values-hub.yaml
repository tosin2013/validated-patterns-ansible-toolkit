# Hub cluster values for Quarkus Reference Application
# This file defines the hub cluster configuration for the Validated Patterns framework
# It integrates with the clustergroup chart to manage applications and namespaces

clusterGroup:
  # Cluster group name
  name: hub

  # Identify this as the hub cluster
  isHubCluster: true

  # Target revision for GitOps
  targetRevision: main

  # Namespaces to create on the hub cluster
  # These are created by the clustergroup chart BEFORE applications
  namespaces:
    - quarkus-dev

  # Subscriptions (Operators) to install
  # Currently none required for this reference app
  subscriptions: []

  # Projects for organizing applications
  projects:
    - quarkus-reference

  # Applications to deploy on the hub cluster
  applications:
    quarkus-reference-app:
      # Application name
      name: quarkus-reference-app

      # Target namespace
      namespace: quarkus-dev

      # ArgoCD project
      project: quarkus-reference

      # Path to Helm chart in Git repository
      path: quarkus-reference-app/charts/all/quarkus-reference-app

      # Git repository configuration
      repoURL: https://github.com/validatedpatterns/validated-patterns-ansible-toolkit.git
      targetRevision: main

      # Sync policy
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=false  # Namespace created by clustergroup
          - RespectIgnoreDifferences=true
        retry:
          limit: 5
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m

      # Ignore differences for certain fields
      ignoreDifferences:
        - group: apps
          kind: Deployment
          jsonPointers:
            - /spec/replicas

      # Health assessment
      health:
        enabled: true

      # Values to override from values-global.yaml
      # These are passed to the Helm chart
      overrides:
        - name: namespace.create
          value: "false"  # Namespace already created by clustergroup
        - name: namespace.name
          value: quarkus-dev
        - name: replicaCount
          value: "2"
        - name: image.tag
          value: latest

# Hub-specific overrides for the Quarkus application
# These override values from values-global.yaml
quarkusApp:
  # Hub cluster typically runs production configuration
  replicas: 2

  # Production resource limits
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "500m"

  # Production configuration
  config:
    profile: prod
    environment: hub-production

  # Enable route on hub cluster
  route:
    enabled: true
    host: ""  # Auto-generated by OpenShift

# ArgoCD configuration for hub cluster
argocd:
  # Hub cluster ArgoCD instance
  namespace: openshift-gitops

  # Server configuration
  server:
    route:
      enabled: true
      tls:
        termination: reencrypt

  # RBAC configuration
  rbac:
    defaultPolicy: 'role:readonly'
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
    scopes: '[groups]'

# Monitoring configuration (optional)
monitoring:
  enabled: true
  namespace: openshift-monitoring

  # ServiceMonitor for Prometheus
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /q/metrics

# Backup configuration (optional)
backup:
  enabled: false
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: 7  # Keep 7 days of backups

# Network policies (optional)
networkPolicies:
  enabled: false
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: openshift-ingress
  egress:
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 8080

# Additional hub-specific configuration
hub:
  # Hub cluster metadata
  clusterName: hub-cluster
  clusterDomain: apps.example.com

  # Hub cluster capabilities
  capabilities:
    - gitops
    - monitoring
    - logging

  # Hub cluster labels
  labels:
    cluster-type: hub
    environment: production
    managed-by: validated-patterns
